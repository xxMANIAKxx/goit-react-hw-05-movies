{"version":3,"file":"static/js/654.d9d7478a.chunk.js","mappings":"8PACA,EAAsB,8BAAtB,EAA8D,kCAA9D,EAA4G,oCAA5G,EAAsJ,8BAAtJ,EAA8L,kCAA9L,EAA0O,kCAA1O,EAAyR,qCAAzR,EAA2U,qC,2ECgG3U,EA3FqB,WAAO,IAAD,IACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,oGAEZF,GAAW,GAFC,UAGOG,EAAAA,EAAAA,IAAgBT,GAHvB,OAGNG,EAHM,OAIZC,EAAQD,GACRG,GAAW,GALC,gDAOZI,QAAQC,IAAR,MAPY,yBASZL,GAAW,GATC,4EAAH,qDAYbE,GACD,GAAE,CAACR,IAEJ,IAKkBY,EALFC,EAWVC,EAAQ,qBAFGC,EAAAA,EAAAA,MAESC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAEzC,OACE,iCACE,SAAC,KAAD,CAAMC,UAAWC,EAASC,GAAIN,EAA9B,qBAGCT,EACC,cAEA,iCACE,iBAAKa,UAAWC,EAAhB,UACGhB,EAAKkB,aACJ,gBACEH,UAAWC,EACXG,IAAKnB,EAAKoB,eACVC,IAAG,yCAAoCrB,EAAKkB,gBAG9C,gBAAKH,UAAWC,EAASK,IAAKC,EAAYH,IAAI,mBAGhD,iBAAKJ,UAAWC,EAAhB,WACE,0BACGhB,EAAKoB,eADR,MAlCIV,EAmC8BV,EAAKuB,aAlCpC,IAAIC,KAAKd,GACVe,eAgCF,QAGA,eAAGV,UAAWC,EAAd,4BACsC,GAApBhB,EAAK0B,cADvB,QAGA,cAAGX,UAAWC,EAAd,uBACA,uBAAIhB,EAAK2B,YACT,cAAGZ,UAAWC,EAAd,qBACA,wBAtCMP,EAsCQT,EAAK4B,OArCtBnB,EAAUoB,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,gBAwCzC,0BACE,gBAAIjB,UAAWC,EAAf,WACE,yBACE,SAAC,KAAD,CAAMC,GAAG,OAAOJ,MAAO,CAAEC,KAAMH,GAA/B,UACE,mBAAQI,UAAWC,EAAnB,uBAGJ,yBACE,SAAC,KAAD,CAAMC,GAAG,UAAUJ,MAAO,CAAEC,KAAMH,GAAlC,UACE,mBAAQI,UAAWC,EAAnB,+BAKR,SAAC,EAAAiB,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,WAMX,C","sources":["webpack://react-homework-template/./src/pages/MovieDetailsPage/MovieDetailsPage.module.css?9108","pages/MovieDetailsPage/MovieDetailsPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"img\":\"MovieDetailsPage_img__+Nbrw\",\"imgWrap\":\"MovieDetailsPage_imgWrap__LDHH-\",\"descrWrap\":\"MovieDetailsPage_descrWrap__6M421\",\"btn\":\"MovieDetailsPage_btn__VtrW5\",\"btnList\":\"MovieDetailsPage_btnList__XS+U3\",\"castBtn\":\"MovieDetailsPage_castBtn__j8IsV\",\"reviewsBtn\":\"MovieDetailsPage_reviewsBtn__YfnB+\",\"descrTitle\":\"MovieDetailsPage_descrTitle__PIIIj\"};","import { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { getMovieDetails } from '../../services/movies-api';\nimport css from './MovieDetailsPage.module.css';\nimport noMovieImg from '../../img/no-poster-available.jpg';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        setLoading(true);\n        const data = await getMovieDetails(movieId);\n        setData(data);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getData();\n  }, [movieId]);\n\n  const getYear = releaseDate => {\n    const date = new Date(releaseDate);\n    return date.getFullYear();\n  };\n\n  const getGenres = arrGenres => {\n    return arrGenres.map(genre => genre.name).join(', ');\n  };\n\n  const location = useLocation();\n\n  const cameBack = location.state?.from ?? '/';\n\n  return (\n    <>\n      <Link className={css.btn} to={cameBack}>\n        Go Back\n      </Link>\n      {loading ? (\n        'Loading...'\n      ) : (\n        <>\n          <div className={css.imgWrap}>\n            {data.poster_path ? (\n              <img\n                className={css.img}\n                alt={data.original_title}\n                src={`https://image.tmdb.org/t/p/w500${data.poster_path}`}\n              />\n            ) : (\n              <img className={css.img} src={noMovieImg} alt=\"not available\" />\n            )}\n\n            <div className={css.descrWrap}>\n              <h1>\n                {data.original_title} ({getYear(data.release_date)})\n              </h1>\n              <p className={css.descrTitle}>\n                User Score: {~~(data.vote_average * 10)}%\n              </p>\n              <p className={css.descrTitle}>Overview</p>\n              <p>{data.overview}</p>\n              <p className={css.descrTitle}>Genres</p>\n              <p>{getGenres(data.genres)}</p>\n            </div>\n          </div>\n          <div>\n            <ul className={css.btnList}>\n              <li>\n                <Link to=\"cast\" state={{ from: cameBack }}>\n                  <button className={css.castBtn}>Cast</button>\n                </Link>\n              </li>\n              <li>\n                <Link to=\"reviews\" state={{ from: cameBack }}>\n                  <button className={css.reviewsBtn}>Reviews</button>\n                </Link>\n              </li>\n            </ul>\n          </div>\n          <Suspense fallback={<div>Loading subpage...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["movieId","useParams","useState","data","setData","loading","setLoading","useEffect","getData","getMovieDetails","console","log","arrGenres","releaseDate","cameBack","useLocation","state","from","className","css","to","poster_path","alt","original_title","src","noMovieImg","release_date","Date","getFullYear","vote_average","overview","genres","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}